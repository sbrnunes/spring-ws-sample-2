[DEBUG][main][06/11/2012 12:00:43,944][DefaultHttpParams]  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
[DEBUG][main][06/11/2012 12:00:43,944][DefaultHttpParams]  - Set parameter http.protocol.version = HTTP/1.1
[DEBUG][main][06/11/2012 12:00:43,944][DefaultHttpParams]  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
[DEBUG][main][06/11/2012 12:00:43,944][DefaultHttpParams]  - Set parameter http.protocol.cookie-policy = default
[DEBUG][main][06/11/2012 12:00:43,944][DefaultHttpParams]  - Set parameter http.protocol.element-charset = US-ASCII
[DEBUG][main][06/11/2012 12:00:43,944][DefaultHttpParams]  - Set parameter http.protocol.content-charset = ISO-8859-1
[DEBUG][main][06/11/2012 12:00:43,944][DefaultHttpParams]  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@1d1e730
[DEBUG][main][06/11/2012 12:00:43,944][DefaultHttpParams]  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
[DEBUG][main][06/11/2012 12:00:43,976][HttpState]  - enter HttpState.setProxyCredentials(AuthScope, Credentials)
[DEBUG][main][06/11/2012 12:00:43,991][DefaultHttpParams]  - Set parameter http.socket.timeout = 30000
[DEBUG][main][06/11/2012 12:00:44,007][HttpClient]  - Java version: 1.6.0_31
[DEBUG][main][06/11/2012 12:00:44,007][HttpClient]  - Java vendor: Sun Microsystems Inc.
[DEBUG][main][06/11/2012 12:00:44,007][HttpClient]  - Java class path: C:\Projects\GOE\Source\branches\V8.8\Code\goe-web-services\target\test-classes;C:\Projects\GOE\Source\branches\V8.8\Code\goe-web-services\target\classes;C:\tools\repo2\sweetdev\sweetdev-spring-ws\1.1.14\sweetdev-spring-ws-1.1.14.jar;C:\tools\repo2\sweetdev\sweetdev-spring-core\1.1.14\sweetdev-spring-core-1.1.14.jar;C:\tools\repo2\commons-collections\commons-collections\3.2\commons-collections-3.2.jar;C:\tools\repo2\cglib\cglib\2.1_3\cglib-2.1_3.jar;C:\tools\repo2\asm\asm\1.5.3\asm-1.5.3.jar;C:\tools\repo2\org\springframework\spring-beans\2.5.6\spring-beans-2.5.6.jar;C:\tools\repo2\org\springframework\spring-aop\2.5.6\spring-aop-2.5.6.jar;C:\tools\repo2\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\tools\repo2\net\sf\ehcache\ehcache\1.3.0\ehcache-1.3.0.jar;C:\tools\repo2\net\sf\jsr107cache\jsr107cache\1.0\jsr107cache-1.0.jar;C:\tools\repo2\backport-util-concurrent\backport-util-concurrent\3.0\backport-util-concurrent-3.0.jar;C:\tools\repo2\org\springframework\spring-aspects\2.5.6\spring-aspects-2.5.6.jar;C:\tools\repo2\org\aspectj\aspectjrt\1.6.2\aspectjrt-1.6.2.jar;C:\tools\repo2\org\aspectj\aspectjweaver\1.6.1\aspectjweaver-1.6.1.jar;C:\tools\repo2\org\springframework\spring-jdbc\2.5.6\spring-jdbc-2.5.6.jar;C:\tools\repo2\org\springframework\spring-orm\2.5.6\spring-orm-2.5.6.jar;C:\tools\repo2\sweetdev\sweetdev-core\2.2.1.34-BP2S\sweetdev-core-2.2.1.34-BP2S.jar;C:\tools\repo2\avalon-framework\avalon-framework\4.1.4\avalon-framework-4.1.4.jar;C:\tools\repo2\org\codehaus\castor\castor\1.1.2\castor-1.1.2.jar;C:\tools\repo2\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\tools\repo2\commons-io\commons-io\1.2\commons-io-1.2.jar;C:\tools\repo2\commons-digester\commons-digester\1.5\commons-digester-1.5.jar;C:\tools\repo2\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\tools\repo2\log4j\log4j\1.2.8\log4j-1.2.8.jar;C:\tools\repo2\org\springframework\ws\spring-ws-core-tiger\1.5.8\spring-ws-core-tiger-1.5.8.jar;C:\tools\repo2\org\springframework\ws\spring-xml\1.5.8\spring-xml-1.5.8.jar;C:\tools\repo2\org\springframework\ws\spring-ws-core\1.5.8\spring-ws-core-1.5.8.jar;C:\tools\repo2\org\springframework\spring-web\2.5.6\spring-web-2.5.6.jar;C:\tools\repo2\org\springframework\spring-webmvc\2.5.6\spring-webmvc-2.5.6.jar;C:\tools\repo2\org\springframework\spring-context-support\2.5.6\spring-context-support-2.5.6.jar;C:\tools\repo2\wsdl4j\wsdl4j\1.6.1\wsdl4j-1.6.1.jar;C:\tools\repo2\org\springframework\spring-context\2.5.6\spring-context-2.5.6.jar;C:\tools\repo2\org\springframework\spring-core\2.5.6\spring-core-2.5.6.jar;C:\tools\repo2\org\springframework\ws\spring-oxm-tiger\1.5.8\spring-oxm-tiger-1.5.8.jar;C:\tools\repo2\org\springframework\ws\spring-oxm\1.5.8\spring-oxm-1.5.8.jar;C:\tools\repo2\org\apache\ws\commons\axiom\axiom-api\1.2.5\axiom-api-1.2.5.jar;C:\tools\repo2\javax\mail\mail\1.4\mail-1.4.jar;C:\tools\repo2\jaxen\jaxen\1.1-beta-9\jaxen-1.1-beta-9.jar;C:\tools\repo2\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\tools\repo2\org\apache\ws\commons\axiom\axiom-impl\1.2.5\axiom-impl-1.2.5.jar;C:\tools\repo2\org\apache\ws\commons\axiom\axiom-dom\1.2.5\axiom-dom-1.2.5.jar;C:\tools\repo2\org\codehaus\woodstox\wstx-asl\3.2.3\wstx-asl-3.2.3.jar;C:\tools\repo2\org\springframework\ws\spring-ws-security\1.5.8\spring-ws-security-1.5.8.jar;C:\tools\repo2\org\springframework\spring-tx\2.5.6\spring-tx-2.5.6.jar;C:\tools\repo2\org\apache\ws\security\wss4j\1.5.8\wss4j-1.5.8.jar;C:\tools\repo2\org\apache\santuario\xmlsec\1.4.3\xmlsec-1.4.3.jar;C:\tools\repo2\xalan\xalan\2.7.0\xalan-2.7.0.jar;C:\tools\repo2\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;C:\tools\repo2\commons-logging\commons-logging\1.0.4\commons-logging-1.0.4.jar;C:\tools\repo2\commons-codec\commons-codec\1.2\commons-codec-1.2.jar;C:\tools\repo2\javax\xml\bind\jaxb-api\2.1\jaxb-api-2.1.jar;C:\tools\repo2\com\sun\xml\bind\jaxb-impl\2.1.5\jaxb-impl-2.1.5.jar;C:\tools\repo2\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\tools\repo2\xerces\xercesImpl\2.8.1\xercesImpl-2.8.1.jar;C:\tools\repo2\xml-apis\xml-apis\1.3.03\xml-apis-1.3.03.jar;C:\tools\repo2\org\springframework\spring-test\2.5.6\spring-test-2.5.6.jar;C:\tools\repo2\junit\junit\4.4\junit-4.4.jar;C:\tools\repo2\org\mockito\mockito-core\1.8.5\mockito-core-1.8.5.jar;C:\tools\repo2\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\tools\repo2\org\objenesis\objenesis\1.0\objenesis-1.0.jar;C:\tools\repo2\jdbc\jdbc-jconn2\5.5\jdbc-jconn2-5.5.jar;/C:/tools/eclipse/sts-3.1.0/configuration/org.eclipse.osgi/bundles/405/1/.cp/;/C:/tools/eclipse/sts-3.1.0/configuration/org.eclipse.osgi/bundles/404/1/.cp/
[DEBUG][main][06/11/2012 12:00:44,007][HttpClient]  - Operating system name: Windows XP
[DEBUG][main][06/11/2012 12:00:44,007][HttpClient]  - Operating system architecture: x86
[DEBUG][main][06/11/2012 12:00:44,007][HttpClient]  - Operating system version: 5.1
[DEBUG][main][06/11/2012 12:00:44,069][HttpClient]  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
[DEBUG][main][06/11/2012 12:00:44,069][HttpClient]  - SunRsaSign 1.5: Sun RSA signature provider
[DEBUG][main][06/11/2012 12:00:44,069][HttpClient]  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
[DEBUG][main][06/11/2012 12:00:44,069][HttpClient]  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
[DEBUG][main][06/11/2012 12:00:44,069][HttpClient]  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
[DEBUG][main][06/11/2012 12:00:44,069][HttpClient]  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
[DEBUG][main][06/11/2012 12:00:44,069][HttpClient]  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
[DEBUG][main][06/11/2012 12:00:44,069][HttpClient]  - SunPCSC 1.6: Sun PC/SC provider
[DEBUG][main][06/11/2012 12:00:44,069][HttpClient]  - SunMSCAPI 1.6: Sun's Microsoft Crypto API provider
[DEBUG][main][06/11/2012 12:00:44,695][HttpMethodBase]  - HttpMethodBase.addRequestHeader(Header)
[DEBUG][main][06/11/2012 12:00:45,195][HttpMethodBase]  - HttpMethodBase.addRequestHeader(Header)
[DEBUG][main][06/11/2012 12:00:45,195][HttpMethodBase]  - HttpMethodBase.addRequestHeader(Header)
[DEBUG][main][06/11/2012 12:00:45,195][PostMethod]  - enter PostMethod.clearRequestBody()
[DEBUG][main][06/11/2012 12:00:45,195][EntityEnclosingMethod]  - enter EntityEnclosingMethod.clearRequestBody()
[DEBUG][main][06/11/2012 12:00:45,195][HttpClient]  - enter HttpClient.executeMethod(HttpMethod)
[DEBUG][main][06/11/2012 12:00:45,195][HttpClient]  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
[DEBUG][main][06/11/2012 12:00:45,195][MultiThreadedHttpConnectionManager]  - enter HttpConnectionManager.getConnectionWithTimeout(HostConfiguration, long)
[DEBUG][main][06/11/2012 12:00:45,195][MultiThreadedHttpConnectionManager]  - HttpConnectionManager.getConnection:  config = HostConfiguration[host=https://ut.eurodw.eu, proxyHost=http://localhost:8888], timeout = 0
[DEBUG][main][06/11/2012 12:00:45,195][MultiThreadedHttpConnectionManager]  - enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)
[DEBUG][main][06/11/2012 12:00:45,195][MultiThreadedHttpConnectionManager]  - enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)
[DEBUG][main][06/11/2012 12:00:45,195][MultiThreadedHttpConnectionManager]  - Allocating new connection, hostConfig=HostConfiguration[host=https://ut.eurodw.eu, proxyHost=http://localhost:8888]
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodDirector]  - Attempt number 1 to process request
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.open()
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - Open connection to localhost:8888
[DEBUG][main][06/11/2012 12:00:45,210][ConnectMethod]  - enter ConnectMethod.execute(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - enter HttpMethodBase.execute(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.printLine(String)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.writeLine(byte[])
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.writeLine()
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][ConnectMethod]  - enter ConnectMethod.addRequestHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - Adding Host request header
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - HttpMethodBase.addRequestHeader(Header)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.writeLine()
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.flushRequestOutputStream()
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][HttpMethodBase]  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,210][HttpConnection]  - enter HttpConnection.readLine()
[DEBUG][main][06/11/2012 12:00:45,226][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,226][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpMethodBase]  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,398][HttpConnection]  - enter HttpConnection.getResponseInputStream()
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HeaderParser.parseHeaders(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,398][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,398][HttpMethodBase]  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,429][HttpMethodBase]  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,429][CookieSpec]  - enter CookieSpecBase.parse(String, port, path, boolean, String)
[DEBUG][main][06/11/2012 12:00:45,429][CookieSpec]  - enter CookieSpecBase.parse(String, port, path, boolean, Header)
[DEBUG][main][06/11/2012 12:00:45,429][HeaderElement]  - enter HeaderElement.parseElements(char[])
[DEBUG][main][06/11/2012 12:00:45,429][Cookie]  - enter Cookie(String, String, String, String, Date, boolean)
[DEBUG][main][06/11/2012 12:00:45,429][CookieSpec]  - enter RFC2109Spec.validate(String, int, String, boolean, Cookie)
[DEBUG][main][06/11/2012 12:00:45,429][CookieSpec]  - enter CookieSpecBase.validate(String, port, path, boolean, Cookie)
[DEBUG][main][06/11/2012 12:00:45,429][CookieSpec]  - enter RFC2109Spec.formatCookie(Cookie)
[WARN][main][06/11/2012 12:00:45,429][HttpMethodBase]  - Cookie rejected: "$Version=0; BCSI-CS-3BB2E93E6EE2438B=2; $Path=/". Illegal path attribute "/". Path of origin: "ut.eurodw.eu:443"
[DEBUG][main][06/11/2012 12:00:45,429][HttpMethodBase]  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,429][HttpMethodBase]  - enter HttpMethodBase.readResponseBody(HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,429][HttpConnection]  - enter HttpConnection.getResponseInputStream()
[DEBUG][main][06/11/2012 12:00:45,429][HttpMethodBase]  - enter HttpMethodBase.canResponseHaveBody(int)
[DEBUG][main][06/11/2012 12:00:45,429][ConnectMethod]  - CONNECT status code 407
[DEBUG][main][06/11/2012 12:00:45,429][HttpMethodDirector]  - enter HttpMethodBase.processAuthenticationResponse(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][AuthChallengeProcessor]  - Supported authentication schemes in the order of preference: [ntlm, digest, basic]
[DEBUG][main][06/11/2012 12:00:45,445][AuthChallengeProcessor]  - Challenge for ntlm authentication scheme not available
[DEBUG][main][06/11/2012 12:00:45,445][AuthChallengeProcessor]  - Challenge for digest authentication scheme not available
[INFO][main][06/11/2012 12:00:45,445][AuthChallengeProcessor]  - basic authentication scheme selected
[DEBUG][main][06/11/2012 12:00:45,445][AuthChallengeProcessor]  - Using authentication scheme: basic
[DEBUG][main][06/11/2012 12:00:45,445][AuthChallengeProcessor]  - Authorization challenge processed
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodDirector]  - Proxy authentication scope: BASIC 'Nom d'utilisateur = Identifiant Annuaire ; Mot de passe = Mot de passe Annuaire'@localhost:8888
[DEBUG][main][06/11/2012 12:00:45,445][HttpState]  - enter HttpState.getProxyCredentials(AuthScope)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - Should close connection in response to directive: close
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.close()
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.closeSockedAndStreams()
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.open()
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - Open connection to localhost:8888
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodDirector]  - Authenticating with BASIC 'Nom d'utilisateur = Identifiant Annuaire ; Mot de passe = Mot de passe Annuaire'@localhost:8888
[DEBUG][main][06/11/2012 12:00:45,445][HttpState]  - enter HttpState.getProxyCredentials(AuthScope)
[DEBUG][main][06/11/2012 12:00:45,445][BasicScheme]  - enter BasicScheme.authenticate(Credentials, HttpMethod)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodParams]  - Credential charset not configured, using HTTP element charset
[DEBUG][main][06/11/2012 12:00:45,445][BasicScheme]  - enter BasicScheme.authenticate(UsernamePasswordCredentials, String)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - HttpMethodBase.addRequestHeader(Header)
[DEBUG][main][06/11/2012 12:00:45,445][ConnectMethod]  - enter ConnectMethod.execute(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - enter HttpMethodBase.execute(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.printLine(String)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.writeLine(byte[])
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.writeLine()
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][ConnectMethod]  - enter ConnectMethod.addRequestHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - Adding Host request header
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.writeLine()
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.flushRequestOutputStream()
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][HttpMethodBase]  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,445][HttpConnection]  - enter HttpConnection.readLine()
[DEBUG][main][06/11/2012 12:00:45,445][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,445][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,538][HttpMethodBase]  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,538][HttpConnection]  - enter HttpConnection.getResponseInputStream()
[DEBUG][main][06/11/2012 12:00:45,538][HttpParser]  - enter HeaderParser.parseHeaders(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,538][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:45,538][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:45,538][HttpMethodBase]  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,538][HttpMethodBase]  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,538][HttpMethodBase]  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,538][HttpMethodBase]  - enter HttpMethodBase.readResponseBody(HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,538][HttpConnection]  - enter HttpConnection.getResponseInputStream()
[DEBUG][main][06/11/2012 12:00:45,538][HttpMethodBase]  - enter HttpMethodBase.canResponseHaveBody(int)
[INFO][main][06/11/2012 12:00:45,538][HttpMethodBase]  - Response content length is not known
[DEBUG][main][06/11/2012 12:00:45,538][HttpMethodBase]  - Force-close connection: true
[DEBUG][main][06/11/2012 12:00:45,538][ConnectMethod]  - CONNECT status code 200
[DEBUG][main][06/11/2012 12:00:45,538][HttpConnection]  - enter HttpConnection.tunnelCreated()
[DEBUG][main][06/11/2012 12:00:45,538][HttpConnection]  - Secure tunnel to ut.eurodw.eu:443
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.execute(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][EntityEnclosingMethod]  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][ExpectContinueMethod]  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - Adding Host request header
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][HttpState]  - enter HttpState.getCookies()
[DEBUG][main][06/11/2012 12:00:45,773][CookieSpec]  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][EntityEnclosingMethod]  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][EntityEnclosingMethod]  - enter EntityEnclosingMethod.getRequestContentLength()
[DEBUG][main][06/11/2012 12:00:45,773][PostMethod]  - enter PostMethod.hasRequestContent()
[DEBUG][main][06/11/2012 12:00:45,773][EntityEnclosingMethod]  - enter EntityEnclosingMethod.hasRequestContent()
[DEBUG][main][06/11/2012 12:00:45,773][HttpMethodBase]  - HttpMethodBase.addRequestHeader(Header)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.print(String)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.writeLine()
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[])
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.write(byte[], int, int)
[DEBUG][main][06/11/2012 12:00:45,773][EntityEnclosingMethod]  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:45,773][PostMethod]  - enter PostMethod.hasRequestContent()
[DEBUG][main][06/11/2012 12:00:45,773][EntityEnclosingMethod]  - enter EntityEnclosingMethod.hasRequestContent()
[DEBUG][main][06/11/2012 12:00:45,773][EntityEnclosingMethod]  - enter EntityEnclosingMethod.getRequestContentLength()
[DEBUG][main][06/11/2012 12:00:45,773][PostMethod]  - enter PostMethod.hasRequestContent()
[DEBUG][main][06/11/2012 12:00:45,773][EntityEnclosingMethod]  - enter EntityEnclosingMethod.hasRequestContent()
[DEBUG][main][06/11/2012 12:00:45,773][HttpConnection]  - enter HttpConnection.getRequestOutputStream()
[DEBUG][main][06/11/2012 12:00:46,116][EntityEnclosingMethod]  - Request body sent
[DEBUG][main][06/11/2012 12:00:46,116][HttpConnection]  - enter HttpConnection.flushRequestOutputStream()
[DEBUG][main][06/11/2012 12:00:46,116][HttpMethodBase]  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:46,116][HttpMethodBase]  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:46,116][HttpConnection]  - enter HttpConnection.readLine()
[DEBUG][main][06/11/2012 12:00:46,116][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:46,116][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:51,304][HttpMethodBase]  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
[DEBUG][main][06/11/2012 12:00:51,304][HttpConnection]  - enter HttpConnection.getResponseInputStream()
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HeaderParser.parseHeaders(InputStream, String)
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readLine(InputStream, String)
[DEBUG][main][06/11/2012 12:00:51,304][HttpParser]  - enter HttpParser.readRawLine()
[DEBUG][main][06/11/2012 12:00:51,304][HttpMethodBase]  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:51,304][HttpMethodBase]  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:51,304][HttpMethodBase]  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
[DEBUG][main][06/11/2012 12:00:51,304][HttpMethodBase]  - enter HttpMethodBase.readResponseBody(HttpConnection)
[DEBUG][main][06/11/2012 12:00:51,304][HttpConnection]  - enter HttpConnection.getResponseInputStream()
[DEBUG][main][06/11/2012 12:00:51,304][HttpMethodBase]  - enter HttpMethodBase.canResponseHaveBody(int)
[DEBUG][main][06/11/2012 12:00:51,570][HttpMethodBase]  - Resorting to protocol version default close connection policy
[DEBUG][main][06/11/2012 12:00:51,570][HttpMethodBase]  - Should NOT close connection, using HTTP/1.1
[DEBUG][main][06/11/2012 12:00:51,570][HttpConnection]  - enter HttpConnection.isResponseAvailable()
[DEBUG][main][06/11/2012 12:00:51,570][HttpConnection]  - enter HttpConnection.releaseConnection()
[DEBUG][main][06/11/2012 12:00:51,570][HttpConnection]  - Releasing connection back to connection manager.
[DEBUG][main][06/11/2012 12:00:51,570][MultiThreadedHttpConnectionManager]  - enter HttpConnectionManager.releaseConnection(HttpConnection)
[DEBUG][main][06/11/2012 12:00:51,570][MultiThreadedHttpConnectionManager]  - Freeing connection, hostConfig=HostConfiguration[host=https://ut.eurodw.eu, proxyHost=http://localhost:8888]
[DEBUG][main][06/11/2012 12:00:51,570][MultiThreadedHttpConnectionManager]  - enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)
[DEBUG][main][06/11/2012 12:00:51,570][IdleConnectionHandler]  - Adding connection at: 1352203251570
[DEBUG][main][06/11/2012 12:00:51,570][MultiThreadedHttpConnectionManager]  - Notifying no-one, there are no waiting threads
